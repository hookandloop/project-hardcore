// Tabs (Vertical and Horizontal)
//==================================================/
@mixin tab-outline {
  border: 1px solid transparent;
  border-radius: 2px;
  bottom: 7px;
  content: '';
  left: 7px;
  position: absolute;
  right: 7px;
  top: 7px;
}

@mixin tab-outline-focus {
  border-color: $tab-selected-color;
}

@mixin tab-after-off {
  background-color: rgba($tab-hover-color, 0); //background: transparent;
  bottom: 1px;
  content: '';
  display: block;
  height: 3px;
  position: absolute;
  @include css3(transition, background-color .25s ease);
  width: 0;
}

@mixin tab-after-hover {
  background-color: $tab-hover-color;
  width: 100%;
}

@mixin tab-after-selected-hover {
  background-color: $tab-selected-color;
  width: 100%;
}

.tab-container {
  font-size: 0;
  position: relative;

  &.has-add-button {
    .add-tab-button {
      visibility: visible;
    }
  }

  &.has-more-button {
    .tab-more {
      visibility: visible;
    }
  }

  &.is-disabled {
    .tab {
      // scss-lint:disable ImportantRule
      cursor: default !important;
      // scss-lint:enable ImportantRule
    }
  }

  > .busy-indicator-container {
    @include font-size(14);
  }

}

.tab-list {
  list-style: none outside none;
  overflow: hidden;
}

// Styles specific to any tabs used in SoHo Xi
// (padding/color rules are different for all tabs so they aren't in the generic class)
.tab {
  @include css3(user-select, none);
  cursor: pointer;
  display: inline-block;
  position: relative;
  text-overflow: ellipsis;

  > * {
    vertical-align: middle;
  }

  > a {
    color: inherit;
    cursor: inherit;
    display: inline-block;
    text-decoration: none;

    * {
      pointer-events: none;
    }

    span {
      color: inherit;
    }
  }

  &.is-disabled {
    // scss-lint:disable ImportantRule
    cursor: default !important;

    .icon {
      color: $disabled-color !important;
    }
    // scss-lint:enable ImportantRule
  }
}

// Animated Bar
.animated-bar {
  @include transition(background-color .25s ease, left .25s ease, right .25s ease, width .25s ease);
  background-color: rgba($tab-selected-color, 0); //background: transparent;
  bottom: 0;
  display: inline-block;
  height: 3px;
  left: 0;
  position: absolute;
  width: 20px;

  &.visible {
    background-color: rgba($tab-selected-color, 1);
  }
}

// Tab Focus State
// Isn't actually attached to each tab, but is a separate element that moves around
// This helps break overflow issues and simplifies the CSS
.tab-focus-indicator {
  @include tab-outline;
  pointer-events: none;
  z-index: 10;

  &.is-visible {
    @include tab-outline-focus;
    box-shadow: $focus-box-shadow;
  }
}

// Tab Body
.tab-panel {
  display: none;
  opacity: 0;
  padding-top: 20px;
  @include transition(opacity 500ms cubic-bezier(.17, .04, .03, .94));

  &.can-show {
    display: block;
  }

  &.is-visible {
    opacity: 1;
  }

  &.padding {
    // scss-lint:disable ImportantRule
    padding: 20px !important;
    // scss-lint:enable ImportantRule
  }

  &.alternate {
    background-color: $body-bg-color;
    min-height: 100%;
  }

  // Change text color when disabled
  &.is-disabled {
    color: $disabled-color;

    label,
    .label {
      color: inherit;
    }

    h1,
    h2,
    h3,
    h4,
    p {
      color: inherit;
    }

  }

  // This rule fixes an IE bug where contents of all tab panels are shown.
  > .page-container {
    position: static;
  }

  > .header {
    + .page-container {
      margin-top: 0;
    }
  }

}

// Page containers that directly house '.tab-panel' elements will allow them to fill the height of the container
// Used in vertical/header/module tabs.
.page-container > .tab-panel,
.page-container > .tab-panel-container > .tab-panel  {
  height: 0;
  padding-top: 0;
  width: 0;

  &.can-show {
    height: 100%;
    width: 100%;
  }

  > .busy-indicator-container {
    @include font-size(14);
  }

}

// More Button
.tab-more,
.add-tab-button {
  @include css3(transition, background-color .25s ease);
  cursor: pointer;
  display: inline-block;
  position: absolute;
  visibility: hidden;

  &:focus {
    outline: none;
  }

  // Position Elements in menu
  > * {
    vertical-align: middle;
  }
}

// Common styles between Horizontal and Header tabs
.tab-container.horizontal,
.tab-container.header-tabs {
  overflow: hidden;

  //========================================
  // Before/After control the faded edges
  //========================================
  &::after,
  &::before {
    @include transition(width 200ms $cubic-ease);
    background-color: transparent;
    content: '';
    display: inline-block;
    height: inherit;
    pointer-events: none;
    position: absolute;
    top: 0;
    width: 0;
    z-index: 20;
  }

  // Background fade on the left edge
  // Fade colors are determined by pattern/implementation (see different tab CSS files for definitions)
  &::before {
    left: 0;
  }

  // Background fade on the right edge
  // Fade colors are determined by pattern/implementation (see different tab CSS files for definitions)
  &::after {
    right: 51px; // bleed into the tab list (width of this element + 1 for border)
  }

  &.scrolled-left::after,
  &.scrolled-right::before {
    width: 40px;
  }

  &.has-add-button {
    &::after {
      right: 95px;
    }
  }

  .tab-more,
  .add-tab-button {
    @include font-size(14);
    background-color: transparent;
    padding: 16px;
    position: relative;
    vertical-align: top;

    .icon {
      height: 16px;
      margin: 0;
      vertical-align: middle;
      width: 32px;
    }
  }

  .add-tab-button {
    padding: 11px 12px;
    text-align: center;
    width: 50px;
  }

  .more-text {
    display: none;
  }

  .tab-list-container {
    display: inline-block;
    overflow-x: auto; // facilitates scrolling of the tabset
    position: relative;
    width: calc(100% - 51px);
  }

  &.has-add-button {
    .tab-list-container {
      width: calc(100% - 102px);
    }
  }

  > .tab-list-container {
    margin-bottom: -18px; // Hide the scrollbar

    > .tab-list {
      display: inline-block;
      height: inherit;
      white-space: nowrap;
    }

    .tab {
      @include css3(transition, background-color .25s ease);
      border-radius: 2px 2px 0 0;
      height: inherit;
      padding: 0;

      &:not(.last-child) {
        margin-right: 10px;

        &.is-error {
          a[role="tab"] {
            padding: 12px 17px 12px 5px;
          }

          .icon-error {
            right: -3px;
            top: 14px;
          }
        }
      }

      &::before {
        @include tab-after-off;
      }

      &:not(.separator):hover {
        &::before {
          @include tab-after-hover;
        }

        &:first-child::before,
        &:last-child::before {
          width: calc(100% - 1px);
        }
      }

      &.is-focused {
        &::after {
          @include tab-outline-focus;
        }
      }

      &.is-disabled {
        // scss-lint:disable ImportantRule
        color: $disabled-color !important;

        &::before {
          content: none !important;
        }
        // scss-lint:enable ImportantRule

        a,
        &:hover a,
        &.is-selected a {
          cursor: default;
        }
      }

      &.dismissible {
        padding-right: 10px;

        .icon {
          position: relative;

          &.close {
            height: 10px;
            margin-left: -3px;
            margin-top: -1px;
            padding-right: 1px;
            right: auto;
            top: 1px;
          }

          &.icon-error {
            height: 16px;
            right: -9px;
            top: -1px;
            width: 16px;
          }

        }
      }

      &.has-popupmenu {
        .icon {
          height: 16px;
          margin: 0 0 0 -5px;
          width: 32px;
          position: static;
        }

        .icon-error {
          height: 16px;
          right: -5px;
          top: 11px;
          width: 16px;
        }
      }

      a {
        @include antialiased();
        @include font-size(14);
        color: inherit;
        font-weight: normal;
        text-decoration: none;

        > * {
          line-height: 1.14;
        }

        span {
          color: inherit;
        }
      }

      .count {
        display: block;
        font-size: 180%;
      }

      .icon-error {
        fill: $error-icon-fill;
        height: 14px;
        position: absolute;
        right: -10px;
        top: 18px;
        width: 18px;
      }
    }

    .separator {
      @include css3(user-select, none);
      cursor: default;
      display: inline-block;
      height: 24px;
      margin: 0 12px;
      padding: 0;
      position: relative;
      vertical-align: middle;

      &::before {
        @include css3(transition, none);
        border-left: 1px solid $tab-border-color;
        content: '';
        display: block;
        height: 100%;
        position: absolute;
        top: 0;
        width: 1px;
      }

      &::after {
        @include css3(transition, none);
        display: none;
      }

      &:hover {
        background-color: transparent;
      }

      &:hover::before {
        background-color: transparent;
      }
    }
  }

  // Entire tab control disabled state
  &.is-disabled {
    color: $disabled-color;

    label,
    .label {
      color: inherit;
    }

    h1,
    h2,
    h3,
    h4,
    p {
      color: inherit;
    }

    .tab-list {
      border-bottom-color: $disabled-color;
    }

    .tab,
    .separator {
      cursor: default;
    }

    .tab {
      // scss-lint:disable ImportantRule
      color: $disabled-color !important;

      &::before {
        content: none !important;
      }

      > a,
      &:hover > a,
      &.is-selected > a,
      .count {
        color: $disabled-color !important;
        cursor: default;
      }

      .icon {
        fill: $disabled-color !important;
      }
      // scss-lint:enable ImportantRule

    }

    .separator {
      &::before {
        border-left-color: $input-disabled-border-color;
      }
    }

    .animated-bar {
      background-color: rgba($disabled-color, 0);

      &.visible {
        background-color: rgba($disabled-color, 1);
      }
    }

  }
}

.popupmenu.tab-list-spillover,
.popupmenu.dropdown-tab {

  .icon.icon-error {
    height: 14px;
    // scss-lint:disable ImportantRule
    left: 7px;
    top: 8px;
    // scss-lint:enable ImportantRule
    width: 14px;
  }

  li.dismissible {
    > a {
      padding-right: 40px;

      > .icon.close {
        display: none;
        height: 14px;
        position: absolute;
        right: 5px;
        top: 9px;
      }
    }

    &.is-focused {
      > a > .icon.close {
        background-color: $popupmenu-hover-color;
        display: inline-block;
      }
    }
  }
}

// On iOS/Android, need to always show the icon so that it can be activated by touch.
.ios,
.android {
  .popupmenu.tab-list-spillover,
  .popupmenu.dropdown-tab {

    li.dismissible {
      > a {

        > .icon.close {
          display: inline-block;
          position: absolute;
        }
      }
    }
  }
}

@import './tabs-horizontal';
@import '../tabs-vertical/tabs-vertical';
@import '../tabs-header/tabs-header';
@import '../tabs-module/tabs-module';
@import '../tabs-multi/multi-tabs';

//RTL Styles
html[dir='rtl'] {
  // More Button
  .tab-more,
  .add-tab-button {
    right: auto;
  }

  .tab-more {
    left: 0;
  }

  .tab-container.horizontal {
    &::before {
      left: auto;
      right: 0;
    }

    &::after {
      left: 51px;
      right: auto;
    }

    &.has-add-button {
      &::after {
        left: 95px;
      }
    }
  }

  .tab-container.horizontal,
  .tab-container.header-tabs {

    .tab {
      &:not(.last-child) {
        margin-left: 10px;
        margin-right: inherit;
      }

      .icon-error {
        left: -10px;
        right: auto;
      }
    }

    .tab-more {
      padding: 12px 14px 11px 4px;

      &::before {
        left: auto;
        right: 0;
      }
    }

    &.has-counts {
      .tab-more {
        padding: 24px 14px 24px 4px;
      }
    }
  }

  .tab-focus-indicator {
    right: auto;
  }
}

// Special Style introduced on SOHO-5680
.tab-container.tab-borders {
  background-color: $panel-bg-color;
  border: 1px solid $panel-border-color;
  border-bottom: 0;

  .tab-more {
    background-color: $panel-bg-color;
  }

  .tab.is-selected a {
    font-weight: bold;
  }

  + .tab-panel-container {
    border: 1px solid $panel-border-color;

    // Nested Tabs
    .tab-panel-container,
    .tab-container {
      border-bottom: 0;
      border-left: 0;
      border-right: 0;
    }

    .tab-panel {
      .tab-container:first-child {
        margin-top: -21px;
      }
    }
  }

  .animated-bar {
    height: 5px;
    margin-top: -2px;
  }

}
