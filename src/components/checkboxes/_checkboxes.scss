// Checkboxes
//================================================== //

@mixin checkbox-animation {
  @include animation(check 0.15s);
}

@mixin checkbox-transform-rules {
  @include css3(transform-origin, left top 0);
}

@mixin checkbox-unchecked-before-style {
  background-color: $checkbox-color-unchecked-initial-background;
  border: 1px solid $checkbox-color-unchecked-initial-border;
  border-radius: 2px;
  content: '';
  height: 14px;
  margin-left: -25px;
  margin-top: 4px;
  position: absolute;
  width: 14px;
}

@mixin checkbox-unchecked-disabled-before-style {
  background-color: $checkbox-color-unchecked-disabled-background;
  border-color: $checkbox-color-unchecked-disabled-border;
}

@mixin checkbox-checked-before-style {
  background-color: $checkbox-color-checked-initial-background;
  border-color: $checkbox-color-checked-initial-background;
}

@mixin checkbox-checked-disabled-before-style {
  background-color: $checkbox-color-checked-disabled-background;
  border-color: $checkbox-color-checked-disabled-background;
}

@mixin checkbox-checked-after-style {
  @include css3(transform, scaleX(-1) rotate(135deg));

  border-color: $checkbox-color-checked-initial-arrow $checkbox-color-checked-initial-arrow $checkbox-color-checked-initial-arrow transparent;
  border-style: solid;
  border-width: 2px 2px 0 0;
  content: '';
  height: 10px;
  left: 3px;
  position: absolute;
  top: 13px;
  width: 4px;
}

@mixin checkbox-checked-disabled-after-style {
  border-color: $checkbox-color-unchecked-disabled-arrow $checkbox-color-unchecked-disabled-arrow $checkbox-color-unchecked-disabled-arrow transparent;
}

@mixin checkbox-focus-state {
  box-shadow: $checkbox-shadow-focus-boxshadow;
}

@mixin checkbox-hover-state {
  @include css3(transition, border-color 300ms ease);

  border-color: $checkbox-color-unchecked-hover-border;
}

@mixin checkbox-partial-after-style {
  border-width: 0 0 2px;
  margin-left: 1px;
  top: 1px;
  width: 10px;

  @include css3(transform, none);
}

input.checkbox,
span.checkbox > input {
  left: -99999px;
  opacity: 0;
  position: fixed;
  top: 0;
  width: 16px;// use fixed, to prevent page jump on click
}

label.inline .checkbox ~ .label-text,
input.checkbox + label,
input.checkbox + input[type='hidden'] + label,
span.checkbox > label {
  @include no-select();

  color: $checkbox-color-unchecked-initial-font;
  cursor: pointer;
  display: inline-block;
  font-size: $theme-size-font-base;
  padding-left: 26px;
  position: relative;
}

label.inline .checkbox ~ .label-text::before,
input.checkbox + label::before,
input.checkbox + input[type='hidden'] + label::before,
span.checkbox > label::before {
  @include checkbox-unchecked-before-style;

  margin-top: 0;
}

label.inline .checkbox:checked ~ .label-text::before,
input.checkbox:checked + label::before,
input.checkbox:checked + input[type='hidden'] + label::before,
span.checkbox > input:checked + label::before {
  @include checkbox-checked-before-style;
}

label.inline .checkbox:checked ~ .label-text::after,
input.checkbox:checked + label::after,
input.checkbox:checked + input[type='hidden'] + label::after,
span.checkbox > input:checked + label::after {
  @include checkbox-checked-after-style;

  top: 9px;
}

span.checkbox > input + label {
  line-height: 20px;
}

.ie9 input.checkbox:checked + label::after,
.ie9 input.checkbox:checked + input[type='hidden'] + label::after,
.ie9 span.checkbox > input:checked + label::after {
  left: 6px;
  margin-top: -8px;
}

label.inline .checkbox.partial:checked ~ .label-text::after,
input.checkbox.partial:checked + label::after,
input.checkbox.partial:checked + input[type='hidden'] + label::after,
span.checkbox.partial > input:checked + label::after {
  @include checkbox-partial-after-style;

  top: -3px;
}

.ie9 input.checkbox.partial:checked + label::after,
.ie9 input.checkbox.partial:checked + input[type='hidden'] + label::after,
.ie9 span.checkbox.partial > input:checked + label::after {
  left: 3px;
  margin-top: 0;
}

// Disabled State
label.inline .checkbox:disabled ~ .label-text,
input.checkbox:disabled + label,
input.checkbox:disabled + input[type='hidden'] + label,
span.checkbox > input:disabled + label {
  color: $checkbox-color-unchecked-disabled-font;
  cursor: default;
}

label.inline .checkbox:disabled:not(:checked) ~ .label-text::before,
input.checkbox:disabled:not(:checked) + label::before,
input.checkbox:disabled:not(:checked) + input[type='hidden'] + label::before,
span.checkbox > input:disabled:not(:checked) + label::before {
  @include checkbox-unchecked-disabled-before-style;
}

label.inline .checkbox:disabled:checked ~ .label-text::before,
input.checkbox:disabled:checked + label::before,
input.checkbox:disabled:checked + input[type='hidden'] + label::before,
span.checkbox > input:disabled:checked + label::before {
  @include checkbox-checked-disabled-before-style;
}

label.inline .checkbox:disabled:checked ~ .label-text::after,
input.checkbox:disabled:checked + label::after,
input.checkbox:disabled:checked + input[type='hidden'] + label::after,
span.checkbox > input:disabled:checked + label::after {
  @include checkbox-checked-disabled-after-style;
}

// Focus State
label.inline .checkbox:focus:not(.hide-focus) ~ .label-text::before,
input.checkbox:focus:not(.hide-focus) + label::before,
input.checkbox:focus:not(.hide-focus) + input[type='hidden'] + label::before,
span.checkbox > input:focus:not(.hide-focus) + label::before {
  @include checkbox-focus-state;
}

// Hover State
label.inline .checkbox:not(:checked):not(:disabled):hover ~ .label-text::before,
input.checkbox:not(:checked):not(:disabled):hover + label::before,
input.checkbox:not(:checked):not(:disabled):hover + input[type='hidden'] + label::before,
span.checkbox > input:not(:checked):not(:disabled):hover + label::before {
  @include checkbox-hover-state;
}

// Labels
label.inline .checkbox ~ .label-text,
.checkbox-label {
  display: inline-block;
  line-height: 17px;
  margin-bottom: 13px;
}

.is-firefox {
  label.inline .checkbox ~ .label-text,
  .checkbox-label {
    display: inline-block;
    line-height: 19px;
  }
}

@include keyframes(check) {
  0% {
    height: 0;
    width: 0;
  }

  50% {
    height: 0;
    width: 4px;
  }

  100% {
    height: 10px;
    width: 4px;
  }
}

label.inline .checkbox ~ .label-text::after,
span.checkbox > input:checked + label::after,
.checkbox ~ label::after {
  @include checkbox-transform-rules;
}

label.inline .checkbox:not(.partial):checked ~ .label-text::after,
span.checkbox > input:checked + label::after,
.checkbox:not(.partial):checked ~ label::after {
  @include checkbox-animation;
}

.checkbox-group-label {
  @include antialiased();

  display: block;
  font-size: $theme-size-font-sm;
  margin-bottom: 12px;

  ~ .field {
    margin-bottom: 12px;
  }

  ~ .field-short {
    margin-bottom: 0;
  }
}

// Print Support
@media print {
  label.inline .checkbox ~ .label-text,
  .checkbox + label::before {
    content: none;
  }

  input.checkbox,
  span.checkbox > input {
    left: unset;
    position: unset;
    width: unset;
  }

  label.inline .checkbox ~ .label-text,
  input.checkbox + label,
  input.checkbox + input[type='hidden'] + label,
  span.checkbox > label {
    padding-left: 8px;
  }

  label.inline .checkbox ~ .label-text::before,
  input.checkbox + label::before,
  input.checkbox + input[type='hidden'] + label::before,
  span.checkbox > label::before {
    content: none;
    margin-left: 0;
  }
}

label.inline:not(.checkbox-label) .checkbox ~ .label-text {
  margin: 0 auto 3px -5px;
}

.ie9 {
  label.inline .checkbox ~ .label-text::after {
    left: 6px;
    top: 1px;
  }

  label.inline .partial:checked ~ .label-text::after {
    left: 3px;
    top: -3px;
  }
}

// RTL Styles
html[dir='rtl'] {
  label.inline .checkbox:checked ~ .label-text::after,
  input.checkbox:checked + label::after,
  input.checkbox:checked + input[type='hidden'] + label::after,
  span.checkbox > input:checked + label::after {
    left: auto;
    right: 13px;
  }

  label.inline .checkbox ~ .label-text,
  input.checkbox + label,
  input.checkbox + input[type='hidden'] + label,
  span.checkbox > label {
    padding-left: inherit;
    padding-right: 32px;
  }

  label.inline .checkbox ~ .label-text::before,
  input.checkbox + label::before,
  input.checkbox + input[type='hidden'] + label::before,
  span.checkbox > label::before {
    margin-left: inherit;
    margin-right: -27px;
  }

  label.inline .checkbox.partial:checked ~ .label-text::after,
  input.checkbox.partial:checked + label::after,
  input.checkbox.partial:checked + input[type='hidden'] + label::after,
  span.checkbox.partial > input:checked + label::after {
    right: 8px;
  }

  .dirty-checkbox {
    right: 8px;
  }

  .field-short {
    .dirty-checkbox {
      right: 12px;
    }
  }

  input.checkbox,
  span.checkbox > input {
    left: auto;
    right: -99999px;
  }

}

// Short Fields
.field-short {
  input.checkbox {
    padding: 0;
  }

  label.inline .checkbox ~ .label-text,
  .checkbox-label,
  input.checkbox + label,
  input.checkbox + input[type='hidden'] + label,
  span.checkbox > label {
    padding-top: 0;
    width: auto;
  }

  .icon-dirty.dirty-checkbox {
    left: auto;
  }
}

.ie10 {
  input.checkbox,
  span.checkbox > input {
    left: -25px;
  }
}

// Colored Checkboxes
@each $name in $color-names {
  $i: index($color-names, $name);
  $color: nth($color-vars, $i);

  input.checkbox.#{$name} + label::before {
    background-color: $color;
    border-color: $color;
  }
}

//Dirty Checkbox
.compound-field {
  > .field.field-checkbox {
    .dirty-checkbox {
      margin: 1px 0 0 2px;
    }
  }
}
