// Color Picker
//================================================== //

@mixin swatch-is-empty($offset: -5px, $border-color: $input-border-color) {
  background-color: $colorpicker-is-empty-bg-color;
  border: 1px solid $border-color;

  &::before {
    @include css3(transform, rotate(-45deg));
    border-top: 2px solid $alert-red;
    content: '';
    left: $offset;
    position: absolute;
    right: $offset;
    top: calc(50% - 1px);
  }
}

.colorpicker-container {
  background-color: $input-bg-color;
  border: 1px solid $input-border-color;
  border-radius: 2px;
  display: inline-block;
  overflow: hidden;
  width: 150px;

  &.is-focused {
    border-color: $input-focus-border-color;
    box-shadow: $focus-box-shadow;
  }

  &:hover:not(.is-focused):not(.is-open):not(.is-disabled) {
    border-color: $input-hover-border-color;
  }

  &.error {
    border-color: $error-color;
  }

  &.is-disabled {
    background-color: $input-disabled-bg-color;
    border-color: $input-disabled-border-color;

    &:hover {
      border-color: $input-disabled-border-color;
    }

    // scss-lint:disable ImportantRule
    .icon:not(.icon-error),
    .icon:hover {
      cursor: default;
      fill: $trigger-disabled-color !important;
    }
    // scss-lint:enable ImportantRule
  }

  &.color-only {
    width: 70px;

    input {
      width: 0;
    }

    .trigger {
      margin-left: -15px;
    }

  }

  &.is-readonly {
    background-color: $input-readonly-bg-color;
    border-color: $input-readonly-border-color;

    &.is-not-editable {
      background-color: $input-bg-color;
      border-color: $input-border-color;

      input[readonly] {
        background-color: $input-bg-color;
        border-color: $input-border-color;
      }

      .icon:not(.icon-error),
      .icon:hover {
        cursor: pointer;
        fill: $trigger-icon-fill-color;
      }

    }

    // scss-lint:disable ImportantRule
    &.is-focused {
      border-color: $input-focus-border-color !important;
    }

    .icon:not(.icon-error),
    .icon:hover {
      cursor: default;
      fill: $trigger-disabled-color;
    }
    // scss-lint:enable ImportantRule
  }

  &.is-open {
    border-color: $input-focus-border-color;
  }

  .trigger {
    cursor: pointer;
    display: inline-block;
    height: 34px;
    margin-left: -5px;
    vertical-align: top;
    width: 31px;
  }

  .icon:not(.icon-error) {
    fill: $trigger-icon-fill-color;
    height: 16px;
    left: 9px;
    position: relative;
    top: 9px;
    width: 16px;

    &:hover {
      fill: $trigger-hover-color;
    }
  }

  .icon-error {
    margin-left: -43px;
  }

  // Color Piece
  .swatch {
    background-color: $colorpicker-initial-bg-color;
    border-radius: 2px;
    display: inline-block;
    height: 32px;
    left: 1px;
    position: relative;
    top: 1px;
    vertical-align: top;
    width: 32px;

    // Trigger Button
    .icon:not(.icon-error) {
      background-color: transparent;
      height: 16px;
      left: 46px;
      top: 9px;
      width: 16px;
    }

    &:hover:not(:disabled) .icon {
      fill: $primary-color;
    }

    &:active .icon {
      fill: $primary-color;
    }

    &.is-empty,
    &.is-invalid {
      @include swatch-is-empty();
    }
  }

  .colorpicker {
    border: 0;
    max-height: 34px;
    padding: 9px 10px 8px;
    width: 90px; //Small Size

    &::-ms-clear {
      display: none;
    }

    &:focus {
      box-shadow: none;
    }

    &:disabled + .swatch {
      cursor: default;
      opacity: .6;
    }
  }

  .icon-dirty {
    margin: 2px 0 0 3px;
  }
}

.popupmenu.colorpicker {
  background-color: $colorpicker-popup-bg-color;
  border-color: $colorpicker-popup-border-color;

  margin-left: -33px;
  max-width: 340px;
  min-height: 50px;
  min-width: 200px;
  padding: 18px;

  li {
    display: inline-block;
    height: 20px;
    margin: 4px;
    width: 22px;

    a {
      border: 1px solid $popupmenu-bg-color;
      padding: 0;

      &:focus {
        box-shadow: $focus-box-shadow;
        outline: 1px solid $primary-color;
      }

      &.is-selected {

        &::after {
          @include css3(transform, scaleX(-1) rotate(135deg));
          // border-color: $white $white $white transparent;
          border-style: solid;
          border-width: 2px 2px 0 0;
          content: '';
          height: 10px;
          left: 7px;
          margin-top: -17px;
          position: absolute;
          width: 4px;
          z-index: 1;
        }

        &.checkmark-one::after {
          border-color: $colorpicker-checkmark-one-color $colorpicker-checkmark-one-color $colorpicker-checkmark-one-color transparent;
        }

        &.checkmark-two::after {
          border-color: $colorpicker-checkmark-two-color $colorpicker-checkmark-two-color $colorpicker-checkmark-two-color transparent;
        }
      }
    }
  }

  .swatch {
    background-color: $graphite04;
    display: block;
    height: 20px;
    width: 20px;

    &.is-border {
      border: 1px solid $colorpicker-swatch-border-color;
    }

    &.is-empty,
    &.is-invalid {
      @include swatch-is-empty(-1px, $colorpicker-swatch-border-color);
    }
  }

  + .arrow {
    left: 44px;
  }

}

.inline.colorpicker-container {
  .colorpicker {
    width: 80px;
  }

  .label-text {
    position: absolute;
    top: -18px;
  }
}

// Short Fields
.field-short {
  .colorpicker-container {
    width: inherit;

    .trigger {
      height: 22px;
      margin-left: -22px;
      width: 22px;

      .icon:not(.icon-error) {
        left: 5px;
        top: 5px;
      }
    }

    .swatch {
      height: 22px;
      width: 22px;

      &.is-empty,
      &.is-invalid {
        @include swatch-is-empty(-2px);
      }
    }

    .colorpicker {
      height: inherit;
      line-height: 14px;
      padding: 5px 21px 5px 5px;
    }
  }
}

//RTL Styles
html[dir='rtl'] {

  .colorpicker-container {
    .swatch {
      left: 0;
      right: 1px;
    }

    .icon {
      left: 0;
    }

    .icon-dirty {
      margin: 2px 3px 0 0;
    }
  }

  .field-short {
    .colorpicker-container {
      .trigger {
        left: 22px;
        position: relative;

        .icon:not(.icon-error) {
          left: 0;
        }
      }

      .colorpicker {
        padding: 5px 5px 5px 21px;
      }
    }
  }

}
